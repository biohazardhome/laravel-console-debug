#+TITLE: Laravel Console Debug
#+AUTHOR: frostrain

* 依赖
- laravel 5
- [[https://github.com/barryvdh/laravel-debugbar][barryvdh/laravel-debugbar]] (laravel-debugbar 本身并不能在命令行中显示调试信息)
* 介绍
这个包可以在 console 中显示 laravel-debugbar 收集到的 *调试信息* 和 *执行的sql*.

比如这里有一个 =test= 命令
#+BEGIN_SRC sh
  # 不带有 -v 参数时, 不显示 调试信息
  $ php artisan test
  hello!

  # 带有 -v 或以上的参数才会显示 调试信息
  $ php artisan test -v
  hello!

  +-------+---------------------+
  | level | debug message       |
  +-------+---------------------+
  | info  | 中文消息            |
  +-------+---------------------+
  | error | some error msg...   |
  +-------+---------------------+
  | debug | {#753               |
  |       |   +"foo": "bar"     |
  |       |   +"arr": array:2 [ |
  |       |     0 => "foo"      |
  |       |     1 => "bar"      |
  |       |   ]                 |
  |       | }                   |
  +-------+---------------------+

  +-------------------------------+----------+
  | sql                           | duration |
  +-------------------------------+----------+
  | select * from `users` limit 1 | 9.77ms   |
  +-------------------------------+----------+
#+END_SRC

=test= 命令的例子, 需要写在 =routes/console.php= 中 (注意, laravel 5.4 和以上才能这样写)
#+BEGIN_SRC php
  Artisan::command('test', function(){
      $this->line('hello!');

      $debugbar = app('debugbar');
      $debugbar->info('中文消息');
      $obj = new StdClass();
      $debugbar->error('some error msg...');
      $obj->foo = 'bar';
      $obj->arr = ['foo', 'bar'];
      debug($obj);

      \App\User::first();
  });
#+END_SRC
* 安装和使用
通过 composer 安装
#+BEGIN_SRC sh
  composer require --dev frostrain/laravel-console-debug
#+END_SRC

然后在 =config/app.php= 中添加服务
#+BEGIN_SRC php
  'providers' => [
      // ...

      // 需要先注册 laravel-debugbar 的服务
      Barryvdh\Debugbar\ServiceProvider::class,
      Frostrain\Laravel\ConsoleDebug\ConsoleDebugServiceProvider::class,
  ]
#+END_SRC

调试信息只有在执行的命令带有 =-v= 或以上的参数时, 才会显示
#+BEGIN_SRC sh
  php artisan test -v
#+END_SRC
* 配置 (可选操作)
你可以设置自己的配置, 通过下面的命令将配置文件复制到 =config/console_debug.php=, 然后修改其中的配置即可
#+BEGIN_SRC sh
  php artisan vendor:publish --provider="Frostrain\Laravel\ConsoleDebug\ConsoleDebugServiceProvider"
#+END_SRC
